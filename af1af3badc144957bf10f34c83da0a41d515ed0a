{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1b883f1d_9afb2325",
        "filename": "tests/test_mme_mgr.py",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000475
      },
      "writtenOn": "2025-08-02T18:42:19Z",
      "side": 1,
      "message": "please add license header.",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 13
      },
      "revId": "af1af3badc144957bf10f34c83da0a41d515ed0a",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f04014d_93a596a5",
        "filename": "tests/test_mme_mgr.py",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1000475
      },
      "writtenOn": "2025-08-02T18:42:19Z",
      "side": 1,
      "message": "This is good start,\nI think we could improve it by incorporating DRY principle:\n\nyou could try to use:\n```\n@pytest.mark.parametrize(\"status_code, expected\", [\n    (200, {\"model\": \"info\"}),\n    (404, None),\n])\n```\nReference: https://docs.pytest.org/en/stable/how-to/parametrize.html",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 56,
        "endChar": 59
      },
      "revId": "af1af3badc144957bf10f34c83da0a41d515ed0a",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    }
  ]
}