# ==================================================================================
#
#       Copyright (c) 2024 Samsung Electronics Co., Ltd. All Rights Reserved.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#          http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
# ==================================================================================
@base = x.x.x.x:32002
@base_data_extraction = x.x.x.x:32002
@feature_grp = teating_influxdb_104
# @feature_grp = sample_fg_01
@trainingjob_name = testing_influxdb_101
# @trainingjob_name = test_influx_1
@trainingjob_version = 1

### TM: API for training
POST http://{{base}}/trainingjobs/{{trainingjob_name}}/training
content-type: application/json

### TM: Initiate training jobs
POST http://{{base}}/trainingjobs/{{trainingjob_name}}/training
content-type: application/json

### TM: Data extraction notification and invoke kf
POST http://{{base}}/trainingjob/dataExtractionNotification
content-type: application/json

{
    "trainingjob_name": "{{trainingjob_name}}"
}

### TM: Get all the training job
GET http://{{base}}/trainingjobs/latest
Content-Type: application/json

### TM: get status
GET http://{{base}}/task_status/{{trainingjob_name}}
Content-Type: application/json

### TM: Get status
GET http://{{base}}/trainingjobs/{{trainingjob_name}}/1

### TM: create feature group
POST http://{{base}}/featureGroup
Content-Type: application/json

{
	"featuregroup_name": "testing_influxdb_01",
	"feature_list": "pdcpBytesDl,pdcpBytesUl",
	"datalake_source": "InfluxSource",
	"enable_dme": false,
	"host": "my-release-influxdb.default",
	"port": "8086",
	"dme_port": "",
	"bucket": "UEData",
	"token": "G4xTett9YjSD9m8ShuAF",
	"source_name": "",
	"measured_obj_class": "",
	"measurement": "liveCell",
	"db_org": "primary"
}

### TM: Get all feature groups
GET http://{{base}}/featureGroup
Content-Type: application/json

### TM: Get training jobs
GET http://{{base}}/training-jobs/latest
Content-Type: application/json

### TM: Get training jobs
GET http://{{base}}/trainingjobs/{{trainingjob_name}}/{{trainingjob_version}}
Content-Type: application/json

### TM: Create training job
POST http://{{base}}/training-jobs
Content-Type: application/json

{
    "modelId":{
        "modelname": "model7",
        "modelversion": "1"
    },
    "model_location": "",
    "training_config": {
        "description": "trainingjob for testing",
        "dataPipeline": {
            "feature_group_name": "testing_influxdb_01",
            "query_filter": "",
            "arguments": "{'epochs': 1, 'trainingjob_name': 'trainingjob1'}"
        },
        "trainingPipeline": {
                "pipeline_name": "qoe_Pipeline11",
                "pipeline_version": "qoe_Pipeline11",
                "enable_versioning": false
        }
    },
    "training_dataset": "",
    "validation_dataset": "",
    "notification_url": "",
    "consumer_rapp_id": "",
    "producer_rapp_id": ""
}

### tm: get pipelines
GET http://{{base}}/pipelines
Content-Type: application/json

### data-extraction: start data extraction
POST http://{{base_data_extraction}}/feature-groups
Content-Type: application/json

{
    "source": {
        "InfluxSource": {
            "query": "from(bucket:\"UEData\") |> range(start: 0, stop: now()) |> filter(fn: (r) => r._measurement == \"liveCell\") |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")"
        }
    },
    "transform": [
        {
            "operation": "SQLTransform",
            "FeatureList": "pdcpBytesDl,pdcpBytesUl",
            "SQLFilter": ""
        }
    ],
    "sink": {
        "CassandraSink": {
            "CollectionName": "testing_influxdb_101"
        }
    },
    "influxdb_info": {
        "host": "my-release-influxdb.default",
        "port": "8086",
        "bucket": "UEData",
        "token": "#######",
        "db_org": "primary",
        "source_name": ""
    }
}

### Start training by training job ID
POST http://{{base}}/training-jobs/12/training
Content-Type: application/json


### Get training job status by ID
GET http://{{base}}/training-jobs/12/status
Content-Type: application/json
