{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "45e8a61e_bc31c6ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000065
      },
      "writtenOn": "2025-08-04T03:31:03Z",
      "side": 1,
      "message": "What if a 3rd party contributor is not from any of corporation? Any guidance for that case in terms of copyright header draft from O-RAN SC?",
      "revId": "af1af3badc144957bf10f34c83da0a41d515ed0a",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b883f1d_9afb2325",
        "filename": "tests/test_mme_mgr.py",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000475
      },
      "writtenOn": "2025-08-02T18:42:19Z",
      "side": 1,
      "message": "please add license header.",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 13
      },
      "revId": "af1af3badc144957bf10f34c83da0a41d515ed0a",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc21cf15_4ef2f27c",
        "filename": "tests/test_mme_mgr.py",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000065
      },
      "writtenOn": "2025-08-04T03:31:03Z",
      "side": 1,
      "message": "What if the contributor is not from any corporation? Need your guidance.",
      "parentUuid": "1b883f1d_9afb2325",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 13
      },
      "revId": "af1af3badc144957bf10f34c83da0a41d515ed0a",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e72fa4ce_6646d02d",
        "filename": "tests/test_mme_mgr.py",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000475
      },
      "writtenOn": "2025-08-04T08:19:42Z",
      "side": 1,
      "message": "Here is a page from O-RAN SC confluence: https://lf-o-ran-sc.atlassian.net/wiki/spaces/ORAN/pages/14386246/Licensing+Text ,\n\nIt does not clarify the requirement for independent contributor. My interpretation of license text is to leave `[company name]` empty.\n\nPlease let me know your thoughts.",
      "parentUuid": "fc21cf15_4ef2f27c",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 13
      },
      "revId": "af1af3badc144957bf10f34c83da0a41d515ed0a",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1a02449a_9eeecf79",
        "filename": "tests/test_mme_mgr.py",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000065
      },
      "writtenOn": "2025-08-04T10:19:48Z",
      "side": 1,
      "message": "Thanks for the feedback. Instead of leaving the [company name] as empty, what about fill in that with the contributor name?",
      "parentUuid": "e72fa4ce_6646d02d",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 13
      },
      "revId": "af1af3badc144957bf10f34c83da0a41d515ed0a",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "287a5164_0d6d3e62",
        "filename": "tests/test_mme_mgr.py",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000475
      },
      "writtenOn": "2025-08-04T10:34:47Z",
      "side": 1,
      "message": "I agree with you Dr. Moonki.\nA quick glance over apache 2.0 page[1] clarifies it.\n\nReference: https://www.apache.org/licenses/LICENSE-2.0#apply",
      "parentUuid": "1a02449a_9eeecf79",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 13
      },
      "revId": "af1af3badc144957bf10f34c83da0a41d515ed0a",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f04014d_93a596a5",
        "filename": "tests/test_mme_mgr.py",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1000475
      },
      "writtenOn": "2025-08-02T18:42:19Z",
      "side": 1,
      "message": "This is good start,\nI think we could improve it by incorporating DRY principle:\n\nyou could try to use:\n```\n@pytest.mark.parametrize(\"status_code, expected\", [\n    (200, {\"model\": \"info\"}),\n    (404, None),\n])\n```\nReference: https://docs.pytest.org/en/stable/how-to/parametrize.html",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 56,
        "endChar": 59
      },
      "revId": "af1af3badc144957bf10f34c83da0a41d515ed0a",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    }
  ]
}